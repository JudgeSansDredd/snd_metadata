<style>
    @font-face {
    font-family: "nodesto-condensed";
    src: url("/proxy/https://github.com/jonathonf/solbera-dnd-fonts/raw/master/Nodesto%20Caps%20Condensed/Nodesto%20Caps%20Condensed.otf") format("opentype");
    font-weight: normal;
  }

  @font-face {
    font-family: "Scaly Sans";
    src: url("/proxy/https://github.com/jonathonf/solbera-dnd-fonts/raw/master/Scaly%20Sans/Scaly%20Sans.otf") format("opentype");
    font-weight: normal;
  }

  .CardFront {
    width: auto;
    border-radius: 8px;
    background-color: black;
  }

  .CardContent {
    padding: 10px 10px 6px;

    font-family: "Scaly Sans", serif;
    font-style: normal;
    font-weight: 300;
  }

  .CardContent hr {
    margin: 0;
    height: 3px;
  }

  .Title {
    padding: 2px 8px;
    background-color: #e8ebec;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
    font-size: 2rem;
    line-height: 2rem;
    font-family: "nodesto-condensed", serif;
    font-weight: normal;
    font-style: normal;
    text-transform: uppercase;
    text-align: center;
  }

  .Subtitle {
    padding: 4px;
    text-align: center;
    color: #e8ebec;
    font-size: 1.15rem;
    line-height: 1.15rem;
  }

  .DetailsContainer {
    overflow: auto;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;

  }

  .DetailsBlock {
    padding: 3px 8px;
    background-color: #e8ebec;
    font-size: 1.15rem;
    line-height: 1.25rem;
    padding: 8px;
  }

  .DetailsBlock > div:nth-child(even) {
    background-color: lightgray;
  }

  .CardFooter {
    margin-top: 2px;
    display: flex;
    justify-content: space-between;
    color: #e8ebec;
    font-size: 1.25rem;
    line-height: 1.25rem;
    font-weight: bold;
  }

  .Category {
    font-size: 1.25rem;
    line-height: 1.25rem;
    font-family: "nodesto-condensed", serif;
    font-weight: normal;
    font-style: normal;
    text-align: center;
  }
  
  .row {
    display: flex;
    padding: 4px;
    align-items: center;
  }
  
  .encounter-details {
    padding: 5px;
    margin-left: 10px;
  }
  
  .smiley {
    min-height: 75px;
    max-height: 75px;
    min-width: 50px;
    max-width: 50px;
  }
</style>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  function getSvg(difficulty) {
    if(difficulty === "deadly") {
      return "<svg class=\"smiley\" style=\"width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M426.666667 1024c-25.6 0-42.666667-17.066667-42.666667-42.666667l0-128c0-25.6 17.066667-42.666667 42.666667-42.666667s42.666667 17.066667 42.666667 42.666667l0 128C469.333333 1006.933333 452.266667 1024 426.666667 1024z\"  /><path d=\"M597.333333 1024c-25.6 0-42.666667-17.066667-42.666667-42.666667l0-128c0-25.6 17.066667-42.666667 42.666667-42.666667s42.666667 17.066667 42.666667 42.666667l0 128C640 1006.933333 622.933333 1024 597.333333 1024z\"  /><path d=\"M725.333333 725.333333\"  /><path d=\"M725.333333 1024 298.666667 1024c-25.6 0-42.666667-17.066667-42.666667-42.666667l0-213.333333c-106.666667-81.066667-170.666667-204.8-170.666667-341.333333C85.333333 192 277.333333 0 512 0s426.666667 192 426.666667 426.666667c0 136.533333-64 260.266667-170.666667 341.333333l0 213.333333C768 1006.933333 750.933333 1024 725.333333 1024zM341.333333 938.666667l341.333333 0 0-192c0-12.8 8.533333-25.6 17.066667-34.133333 93.866667-64 153.6-170.666667 153.6-281.6 0-187.733333-153.6-341.333333-341.333333-341.333333s-341.333333 153.6-341.333333 341.333333c0 115.2 55.466667 221.866667 153.6 281.6C332.8 716.8 341.333333 729.6 341.333333 746.666667L341.333333 938.666667z\"  /><path d=\"M725.333333 597.333333c-12.8 0-21.333333-4.266667-29.866667-12.8l-128-128c-17.066667-17.066667-17.066667-42.666667 0-59.733333s42.666667-17.066667 59.733333 0l128 128c17.066667 17.066667 17.066667 42.666667 0 59.733333C746.666667 593.066667 738.133333 597.333333 725.333333 597.333333z\"  /><path d=\"M597.333333 597.333333c-12.8 0-21.333333-4.266667-29.866667-12.8-17.066667-17.066667-17.066667-42.666667 0-59.733333l128-128c17.066667-17.066667 42.666667-17.066667 59.733333 0s17.066667 42.666667 0 59.733333l-128 128C618.666667 593.066667 610.133333 597.333333 597.333333 597.333333z\"  /><path d=\"M426.666667 597.333333c-12.8 0-21.333333-4.266667-29.866667-12.8l-128-128c-17.066667-17.066667-17.066667-42.666667 0-59.733333s42.666667-17.066667 59.733333 0l128 128c17.066667 17.066667 17.066667 42.666667 0 59.733333C448 593.066667 439.466667 597.333333 426.666667 597.333333z\"  /><path d=\"M298.666667 597.333333c-12.8 0-21.333333-4.266667-29.866667-12.8-17.066667-17.066667-17.066667-42.666667 0-59.733333l128-128c17.066667-17.066667 42.666667-17.066667 59.733333 0s17.066667 42.666667 0 59.733333l-128 128C320 593.066667 311.466667 597.333333 298.666667 597.333333z\" /></svg>";
   } else if(difficulty === "easy") {
     return "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"smiley\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.182 15.182a4.5 4.5 0 01-6.364 0M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z\" /></svg>";
   } else if(difficulty === "medium") {
     return "<svg class=\"smiley\" style=\"width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M669.866667 353.28c8.533333 8.533333 12.8 18.773333 12.8 30.72s-4.266667 21.896533-12.8 29.866667c-7.970133 8.533333-17.92 12.8-29.866667 12.8s-22.186667-4.266667-30.72-12.8c-7.9872-7.970133-11.946667-17.92-11.946667-29.866667s3.959467-22.186667 11.946667-30.72c8.533333-7.970133 18.773333-11.946667 30.72-11.946667s21.896533 3.976533 29.866667 11.946667z m-256 0c8.533333 8.533333 12.8 18.773333 12.8 30.72s-4.266667 21.896533-12.8 29.866667c-7.970133 8.533333-17.92 12.8-29.866667 12.8s-22.186667-4.266667-30.72-12.8c-7.970133-7.970133-11.946667-17.92-11.946667-29.866667s3.976533-22.186667 11.946667-30.72c8.533333-7.970133 18.773333-11.946667 30.72-11.946667s21.896533 3.976533 29.866667 11.946667z\" /><path d=\"M512 955.733333c-121.890133 0-227.584-43.8784-314.146133-130.440533C111.872 739.293867 68.266667 633.9072 68.266667 512c0-121.873067 43.588267-227.549867 129.536-314.112C284.450133 111.854933 390.126933 68.266667 512 68.266667c121.9072 0 227.293867 43.605333 313.2928 129.5872C911.854933 284.416 955.733333 390.109867 955.733333 512c0 121.924267-43.895467 227.328-130.474666 313.326933C739.328 911.837867 633.924267 955.733333 512 955.733333z m0-853.333333c-112.5376 0-210.1248 40.2432-290.065067 119.620267C142.6432 301.8752 102.4 399.4624 102.4 512c0 112.520533 40.226133 209.800533 119.586133 289.160533C301.909333 881.083733 399.496533 921.6 512 921.6c112.4864 0 209.7664-40.4992 289.1264-120.405333C881.1008 721.7664 921.6 624.4864 921.6 512c0-112.503467-40.516267-210.090667-120.439467-290.013867C721.800533 142.626133 624.520533 102.4 512 102.4z m128 341.333333a58.606933 58.606933 0 0 1-42.786133-17.800533C585.966933 414.72 580.266667 400.605867 580.266667 384c0-16.366933 5.563733-30.634667 16.554666-42.376533 12.561067-11.793067 26.811733-17.3568 43.178667-17.3568 16.5888 0 30.702933 5.700267 41.9328 16.964266A58.504533 58.504533 0 0 1 699.733333 384c0 16.571733-6.2976 31.214933-18.210133 42.3424-10.308267 11.093333-24.951467 17.390933-41.5232 17.390933z m0-85.333333c-7.6288 0-13.704533 2.338133-19.063467 7.355733-4.1984 4.539733-6.536533 10.5984-6.536533 18.244267 0 7.406933 2.2016 13.056 6.929067 17.783467 5.341867 5.341867 11.264 7.816533 18.670933 7.816533 7.2704 0 12.629333-2.269867 17.390933-7.389867 5.922133-5.5808 8.209067-10.939733 8.209067-18.210133 0-7.406933-2.491733-13.329067-7.799467-18.653867-4.727467-4.744533-10.3936-6.946133-17.800533-6.946133z m-256 85.333333a58.5728 58.5728 0 0 1-42.786133-17.800533C329.966933 414.702933 324.266667 400.5888 324.266667 384c0-16.366933 5.563733-30.6176 16.554666-42.359467 12.561067-11.810133 26.811733-17.373867 43.178667-17.373866 16.5888 0 30.702933 5.700267 41.949867 16.964266A58.555733 58.555733 0 0 1 443.733333 384c0 16.571733-6.2976 31.214933-18.210133 42.3424-10.308267 11.093333-24.951467 17.390933-41.5232 17.390933z m0-85.333333c-7.645867 0-13.704533 2.338133-19.063467 7.355733-4.1984 4.539733-6.536533 10.5984-6.536533 18.244267 0 7.406933 2.2016 13.056 6.946133 17.783467 5.3248 5.341867 11.246933 7.816533 18.653867 7.816533 7.2704 0 12.629333-2.269867 17.390933-7.389867 5.9392-5.5808 8.209067-10.939733 8.209067-18.210133a24.917333 24.917333 0 0 0-7.799467-18.653867c-4.744533-4.744533-10.3936-6.946133-17.800533-6.946133z\" /><path d=\"M682.666667 699.733333H341.333333a17.066667 17.066667 0 1 1 0-34.133333h341.333334a17.066667 17.066667 0 1 1 0 34.133333z\" /></svg>";
   } else if(difficulty === "hard") {
     return "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"smiley\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z\" /></svg>";
   } else {
     return "";
   }
  }
  
  async function getWord() {
    const target = document.getElementById("DetailsBlock");
    const n_pc = {{ config.n_pc }};
  	const level = {{ config.level }};
    const difficulty = "{{ config.difficulty.selected }}";
    const environment = "{{ config.environment.selected }}";
    const loot_type = "{{ "" if config.loot_type.selected == "None" else config.loot_type.selected }}"
    const n = {{ config.n_encounters }};
    const res = await axios.get("https://donjon.bin.sh/5e/random/rpc-5e.fcgi", {
      params: {
        type: "Encounter",
        n_pc,
        level,
        difficulty,
        environment,
        loot_type,
        n
      }
    });
    const {data} = res;
    data.forEach(encounter => {
      // Parse data
      const [lineup, difficultyAndXp, ...treasure] = encounter.split(';');
      const [difficulty, xp] = difficultyAndXp.split(',').map(val => val.trim());
      console.log(lineup);
      console.log(difficulty);
      console.log(xp);
      console.log(treasure);
      
      // Create row
      const row = document.createElement("div");
      target.appendChild(row);
      row.classList.add("row");
      
      // Create Svg
      const svg = document.createElement("div");
      row.appendChild(svg);
      svg.outerHTML = getSvg(difficulty);
      svg.classList.add("smiley");
      
      // Create details
      const encounterDetails = document.createElement("div");
      row.appendChild(encounterDetails);
      encounterDetails.classList.add("encounter-details");
      if(treasure.length) {
        console.log("We should add treasure!");
        const encounterWithTreasure = `${lineup}<br /><br />${treasure.map(t => t.trim()).join(', ').replace('treasure', 'Treasure:')}`;
        encounterDetails.innerHTML = encounterWithTreasure;
      } else {
        encounterDetails.innerHTML = lineup;
      }
    });
  }
  window.onload = getWord;
</script>
<div class="CardFront">
  <div class="CardContent">
    <div class="Title" id="rand-word">Some Title</div>
    <div class="Subtitle">Some Subtitle</div>
    <div class="DetailsContainer">
      <div class="DetailsBlock" id="DetailsBlock">
      </div>
    </div>
  </div>
</div>